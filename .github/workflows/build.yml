name: Production build

on: [push]

env:
  NODE_OPTIONS: "--max_old_space_size=8048"

jobs:
  testbuild_on_linux:
    name: Testbuild on Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@master
      with:
        node-version: 10
    - name: Install dependencies
      run: npm install
    - name: Build on Linux
      run: npm run build:prod
  build_on_mac:
    name: Build on MacOS
    runs-on: macOS-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@master
      with:
        node-version: 10
    - name: Install dependencies
      run: npm install
    - name: Build on MacOS
      run: npm run build
    - name: Build/release Electron app
      uses: samuelmeuli/action-electron-builder@v1
      with:
        # GitHub token, automatically provided to the action
        # (No need to define this secret in the repo settings)
        github_token: ${{ secrets.github_token }}

        # If the commit is tagged with a version (e.g. "v1.0.0"),
        # release the app after building
        release: ${{ startsWith(github.ref, 'refs/tags/v') }}
        skip_build: true

  build_on_linux:
    name: Build on Linux
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions/setup-node@master
      with:
        node-version: 10
    - name: Install dependencies
      run: npm install
    - name: Build on Linux
      run: npm run build
    - name: Build/release Electron app
      uses: samuelmeuli/action-electron-builder@v1
      with:
        # GitHub token, automatically provided to the action
        # (No need to define this secret in the repo settings)
        github_token: ${{ secrets.github_token }}

        # If the commit is tagged with a version (e.g. "v1.0.0"),
        # release the app after building
        release: ${{ startsWith(github.ref, 'refs/tags/v') }}
        skip_build: true
 
  build_on_win:
    name: Build on Windows
    runs-on: windows-2016
    steps:
    - uses: actions/checkout@master  
    - uses: actions/setup-node@master
      with:
        node-version: 10
    - name: install node tools
      run: npm install --global --production windows-build-tools@4.0.0
    - name: install node-gyp
      run: npm install --global node-gyp@latest
    - name: Set node config to use python2.7
      run: npm config set python python2.7
    - name: Set node config to set msvs_version to 2015
      run: npm config set msvs_version 2015
#    - name: Work around for Windows Server 2019
#      run: set path=%path%;C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\MSBuild\Current\Bin
    - name: Install dependencies
      run: npm install
    - name: Build on Windows
      run: npm run build
    - name: Build/release Electron app
      uses: samuelmeuli/action-electron-builder@v1
      with:
        # GitHub token, automatically provided to the action
        # (No need to define this secret in the repo settings)
        github_token: ${{ secrets.github_token }}

        # If the commit is tagged with a version (e.g. "v1.0.0"),
        # release the app after building
        release: ${{ startsWith(github.ref, 'refs/tags/v') }}
        skip_build: true
